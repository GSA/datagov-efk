---
# Some of this info was necessary for this to work:
# https://discuss.elastic.co/t/logstash-s3-output-plugin-with-aws-emulation-with-localstack/255822
services:
  localstack:
    container_name: "localstack"
    image: localstack/localstack:1.2.0
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal s3 ls
      interval: 5s
      timeout: 10s
      start_period: 10s
    ports:
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4571:4571"
    environment:
      - SERVICES=${SERVICES-}
      - DEBUG=${DEBUG-}
      - DATA_DIR=${DATA_DIR-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./localstack.d:/docker-entrypoint-initaws.d
  
 
  logstash:
    depends_on:
      localstack:
        condition: service_healthy
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-/usr/bin/curl --fail http://logstash:logstash@localhost:8080 || exit 1}"
      interval: 10s
      timeout: 3s
      start_period: 5s
      retries: 20
    build:
      dockerfile: $PWD/Dockerfile 
      context: logstash
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
      AWS_BUCKET: logstash-bucket
      AWS_ENDPOINT: http://localstack:4566
      DRAIN_USER: logstash
      DRAIN_PASSWORD: logstash
      PORT: 8080
    ports:
      - 8080:8080
      - 9600:9600

  test:
    build:
      context: .
      dockerfile: test/Dockerfile
    depends_on:
      logstash:
        condition: service_healthy
    volumes:
      - .:/app
