---
name: deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create-cloudgov-services-management-staging:
    name: create services (management-staging) 
    environment: management-staging
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: create services
        uses: cloud-gov/cg-cli-tools@main
        with:
          command: ./create-cloudgov-services.sh
          cf_org: gsa-datagov
          cf_space: management-staging
          cf_username: ${{secrets.CF_SERVICE_USER}}
          cf_password: ${{secrets.CF_SERVICE_AUTH}} 
  
  deploy-management-staging:
    name: deploy (management-staging)
    environment: management-staging
    runs-on: ubuntu-latest
    needs:
      - create-cloudgov-services-management-staging
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build dependencies
        run: |
          chmod -R 777 logstash
          PWD=`pwd` make logstash-installation
      - name: deploy-logstash
        uses: cloud-gov/cg-cli-tools@main
        with:
          command: cf push --vars-file vars.management-staging.yml --strategy rolling
          cf_org: gsa-datagov
          cf_space: management-staging
          cf_username: ${{secrets.CF_SERVICE_USER}}
          cf_password: ${{secrets.CF_SERVICE_AUTH}}
      - name: smoke test logstash
        run: |
          sleep 150  # Logstash is very slow to start up 
          [ "401" = "$(curl -w '%{http_code}' --output /dev/null --silent https://logstash-stage-datagov.app.cloud.gov)" ]

  create-cloudgov-services-management:
    name: create services (management)
    environment: management
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: create services
        uses: cloud-gov/cg-cli-tools@main
        with:
          command: ./create-cloudgov-services.sh
          cf_org: gsa-datagov
          cf_space: management
          cf_username: ${{secrets.CF_SERVICE_USER}}
          cf_password: ${{secrets.CF_SERVICE_AUTH}}

  deploy-management:
    name: deploy (management)
    environment: management
    runs-on: ubuntu-latest
    needs:
      - create-cloudgov-services-management
      - deploy-management-staging
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build dependencies
        run: |
          chmod -R 777 logstash
          PWD=`pwd` make logstash-installation
      - name: deploy-logstash
        uses: cloud-gov/cg-cli-tools@main
        with:
          command: cf push --vars-file vars.management.yml --strategy rolling
          cf_org: gsa-datagov
          cf_space: management
          cf_username: ${{secrets.CF_SERVICE_USER}}
          cf_password: ${{secrets.CF_SERVICE_AUTH}}
      - name: smoke test
        run: |
          sleep 150  # Logstash is very slow to start up
          [ "401" = "$(curl -w '%{http_code}' --output /dev/null --silent https://logstash-stage-datagov.app.cloud.gov)" ]

  drain-apps-in-management-staging:
    name: drain apps in management-staging space
    environment: management-staging
    runs-on: ubuntu-latest
    needs:
      - deploy-management-staging
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: drain-management-staging-space
        uses: cloud-gov/cg-cli-tools@main
        with:
          command: |
            ./create-space-drain.sh management-staging
          cf_org: gsa-datagov
          cf_space: management-staging
          cf_username: ${{secrets.CF_SERVICE_USER}}
          cf_password: ${{secrets.CF_SERVICE_AUTH}}

  drain-apps-in-staging:
    name: drain apps in staging space
    environment: staging
    runs-on: ubuntu-latest
    needs:
      - deploy-management-staging
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: drain-staging-space
        uses: cloud-gov/cg-cli-tools@main
        with:
          command: |
            ./create-space-drain.sh management-staging
          cf_org: gsa-datagov
          cf_space: staging
          cf_username: ${{secrets.CF_SERVICE_USER}}
          cf_password: ${{secrets.CF_SERVICE_AUTH}}

  drain-apps-in-management:
    name: drain apps in management space
    environment: management
    runs-on: ubuntu-latest
    needs:
      - deploy-management
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: drain-management-space
        uses: cloud-gov/cg-cli-tools@main
        with:
          command: |
            ./create-space-drain.sh management
          cf_org: gsa-datagov
          cf_space: management
          cf_username: ${{secrets.CF_SERVICE_USER}}
          cf_password: ${{secrets.CF_SERVICE_AUTH}}

  drain-apps-in-prod:
    name: drain apps in prod space
    environment: prod
    runs-on: ubuntu-latest
    needs:
      - deploy-management
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: drain-prod-space
        uses: cloud-gov/cg-cli-tools@main
        with:
          command: |
            ./create-space-drain.sh management
          cf_org: gsa-datagov
          cf_space: prod
          cf_username: ${{secrets.CF_SERVICE_USER}}
          cf_password: ${{secrets.CF_SERVICE_AUTH}}

  drain-apps-in-prod-egress:
    name: drain apps in prod-egress space
    environment: prod-egress
    runs-on: ubuntu-latest
    needs:
      - deploy-management
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: drain-prod-egress-space
        uses: cloud-gov/cg-cli-tools@main
        with:
          command: |
            ./create-space-drain.sh management
          cf_org: gsa-datagov
          cf_space: prod-egress
          cf_username: ${{secrets.CF_SERVICE_USER}}
          cf_password: ${{secrets.CF_SERVICE_AUTH}}