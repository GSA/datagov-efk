input {
  http {
    port => "5044"
    user => "${LOGSTASH_USER}"
    password => "${LOGSTASH_PASSWORD}"
  }
}

input {
  heartbeat {
    interval => 60
  }
}

filter{
  mutate {
    remove_field => ["headers"]
  }
  grok {
    match => { "message" => "%{SYSLOG5424PRI}%{NONNEGINT:syslog5424_ver} +(?:%{TIMESTAMP_ISO8601:syslog5424_ts}|-) +(?:%{DATA:syslog5424_host}|-) +(?:%{NOTSPACE:syslog5424_app}|-) +(?:%{NOTSPACE:syslog5424_proc}|-) +(?:%{WORD:syslog5424_msgid}|-) +(?:%{SYSLOG5424SD:syslog5424_sd}|-|)%{SPACE}%{GREEDYDATA:message}" }
    tag_on_failure => []
    overwrite => ["message"]
    break_on_match => false
  }
  grok {
    match => { "syslog5424_proc" => "^\[(%{WORD:cf_component})?/.+\]$" }
    tag_on_failure => []
    break_on_match => false
  }
  if [cf_component] == "RTR" {
      grok {
        match => { "message" => "%{HOSTNAME:host} - \[%{TIMESTAMP_ISO8601}\] \"%{WORD:http_method} %{URIPATH:http_uri} HTTP/%{NUMBER:http_version}\" %{POSINT:http_response} %{NONNEGINT:http_request_size} %{NONNEGINT:http_response_size} \"%{DATA:referrer}\" \"%{DATA:user_agent}\" \"%{IPORHOST:ip_source}:%{POSINT:ip_source_port}\" \"%{IPORHOST:ip_destination}:%{POSINT:ip_destination_port}\" x_forwarded_for\:\"%{DATA:x_forwarded_for}\" x_forwarded_proto:\"%{DATA:x_forwarded_proto}\" vcap_request_id:\"%{UUID:vcap_request_id}\" response_time:%{NUMBER:response_time} gorouter_time:%{NUMBER:gorouter_time} app_id:\"%{UUID:app_id}\" app_index:\"%{NONNEGINT:app_index}\" x_b3_traceid:\"%{DATA:x_b3_traceid}\" x_b3_spanid:\"%{DATA:x_b3_spanid}\" x_b3_parentspanid:\"%{DATA:x_b3_parentspanid}\" b3:\"%{DATA:b3}\"" }
        tag_on_failure => []
        break_on_match => false
      }
      mutate {
        remove_field => ["message"]
      }
  }
  if [cf_component] == "APP" {
    mutate { add_tag => ["CF-APP"] }
    if [message] =~ /^{.*}/ {
          json {
            source => "message"
            add_tag => [ "json", "parsed"]
          }
          mutate {
            remove_field => ["message"]
          }
        }
  } else {
    mutate { add_tag => ["CF-PAAS"] }
  }
  grok {
    match => { "syslog5424_proc" => "^\[APP/PROC/WEB/(%{INT:cf_app_instance_index})?\]$" }
    tag_on_failure => []
    break_on_match => false
  }
  grok {
    match => { "syslog5424_host" => "^%{DATA:cf_org}\.%{DATA:cf_space}\.%{DATA:cf_app}?$" }
    tag_on_failure => []
    break_on_match => false
  }
  mutate { add_field => { "[@metadata][target_index]" => "index-%{+YYYY.MM}" } }
}

output {
  s3 {
    access_key_id => "${AWS_ACCESS_KEY_ID}"
    secret_access_key => "${AWS_SECRET_ACCESS_KEY}"
    region => "${AWS_REGION}"
    bucket => "${AWS_BUCKET}"
    endpoint => "${AWS_ENDPOINT}"
    validate_credentials_on_root_bucket => "false"
    additional_settings => { "force_path_style" => true }
  }
}
